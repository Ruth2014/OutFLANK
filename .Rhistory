tempSNPlist1=tempSNPlist1[seq(from=2,to=length(tempSNPlist1), by=2)]
tempSNPlist2=paste("rs",tempSNPlist1,sep="")
tempSNPlist1=substr(tempSNPlist2,start=1,stop = 10)
tempSNPlist3=ifelse(substr(tempSNPlist1,start=10,stop=10)==" ", substr(tempSNPlist1,start=1,stop=9),tempSNPlist1)
annotationBySNP=cbind(chr=annotations[,1],SNPname=tempSNPlist3,SNPtype)
annotationBySNPDF=as.data.frame(annotationBySNP)
table(annotationBySNPDF$SNPname)
which(annotationBySNPDF$SNPname=="rs9442372")
temp41=match(chr8$SNPname,aBSNP$SNPname)
head(temp41)
temp41=match(chr8$SNPname,annotationBySNPDF$SNPname)
head(temp41)
chr8$SNPname
chr8$SNPname[1]
temp41=match(chr8$SNPname,annotationBySNPDF$SNPname)
temp41[1]
annotationBySNPDF$SNPname[305924]
length(chr8$SNPname)
length(chr8$SNPname)/53
temp41
head(temp41)
annotationBySNPDF$SNPname(head(temp41))
annotationBySNPDF$SNPname[head(temp41)]
annotationBySNPDF$SNPname[head(temp41,100)]
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPname[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPType=SNPType)
if(DeleteNonGenic) out=out[which(SNPtype!=""),]
}
temp43=chrDFMaker[8]
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp)
writeLines("got this far")
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPname[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPType=SNPType)
if(DeleteNonGenic) out=out[which(SNPtype!=""),]
}
temp43=chrDFMaker[8]
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
writeLines("got this far")
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPname[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPType=SNPType)
if(DeleteNonGenic) out=out[which(SNPtype!=""),]
}
temp43=chrDFMaker[8]
OFonHGDP[8]
temp43=chrDFMaker(8)
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPname[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPtype=SNPtype)
if(DeleteNonGenic) out=out[which(SNPtype!=""),]
}
temp43=chrDFMaker(8)
head(temp43)
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPname[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPtype=SNPtype)
if(DeleteNonGenic) out=out[which(SNPtype!=""),]
out
}
head(temp43)
temp43=chrDFMaker(8)
head(temp43)
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPname[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPtype=SNPtype)
#if(DeleteNonGenic) out=out[which(SNPtype!=""),]
out
}
temp43=chrDFMaker(8)
head(temp43)
table(temp43$SNPtype)
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPtype[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPtype=SNPtype)
#if(DeleteNonGenic) out=out[which(SNPtype!=""),]
out
}
temp43=chrDFMaker(8)
head(temp43)
head(annotationsBySNPDF)
head(annotationBySNPDF)
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPtype[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPtype=SNPtype)
#if(DeleteNonGenic) out=out[which(SNPtype!=""),]
# out
matchesToAnnotation
}
temp43=chrDFMaker(8)
head(temp43)
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPtype[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPtype=SNPtype)
#if(DeleteNonGenic) out=out[which(SNPtype!=""),]
# out
LocusNametemp
}
temp43=chrDFMaker(8)
head(temp43)
head(annotaionBySNPDF$SNPname)
head(annotationBySNPDF$SNPname)
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp1=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp1)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPtype[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPtype=SNPtype)
#if(DeleteNonGenic) out=out[which(SNPtype!=""),]
# out
LocusNametemp1
}
temp43=chrDFMaker(8)
head(temp43)
head(annotationBySNPDF)
head(annotationBySNPDF$SNPname)
as.character(head(annotationBySNPDF$SNPname))
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp1=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp1)
LocusNametemp2=as.character(LocusNametemp1)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp2,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPtype[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPtype=SNPtype)
#if(DeleteNonGenic) out=out[which(SNPtype!=""),]
# out
matchesToAnnotation
}
temp43=chrDFMaker(8)
head(temp43)
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp1=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp1)
LocusNametemp2=as.character(LocusNametemp1)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp2,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPtype[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPtype=SNPtype)
#if(DeleteNonGenic) out=out[which(SNPtype!=""),]
# out
out
}
temp43=chrDFMaker(8)
head(temp43)
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp1=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp1)
LocusNametemp2=as.character(LocusNametemp1)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp2,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPtype[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPtype=SNPtype)
if(DeleteNonGenic) out=out[which(SNPtype!=""),]
out
}
temp43=chrDFMaker(8)
head(temp43)
length(temp43[,1])
names(temp43)
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp1=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusName=LocusNametemp1)
LocusNametemp2=as.character(LocusNametemp1)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp2,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPtype[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPtype=SNPtype)
if(DeleteNonGenic) out=out[which(SNPtype!=""),]
out
}
temp43=chrDFMaker(8)
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp1=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp1)
names(LocusNametemp)=c("LocusName")
LocusNametemp2=as.character(LocusNametemp1)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp2,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPtype[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPtype=SNPtype)
if(DeleteNonGenic) out=out[which(SNPtype!=""),]
out
}
temp43=chrDFMaker(8)
head(temp43)
table(temp43$SNPtype)
allGeneData=chrDFMaker(1)
for(chrnum in 2:23) rbind(allGeneData,chrDFMaker(chrnum))
length(allGeneData[,1])
write.table(allGeneData, file ="~/Desktop/HGDP data/allGeneData.txt" )
allHGDPOF=OutFLANK(allGeneData,NumberOfSamples=20)
summary(allHGDPOF$results)
OutFLANKResultsPlotter(allHGDPOF)
allHGDPOF$dfInferred
OutFLANKResultsPlotter(allHGDPOF,Zoom=T)
pOutlierFinderChiSqNoCorr(allHGDPOF, .014,                          10, qthreshold=0.05)
pOutlierFinderChiSqNoCorr(allHGDPOF, .014,10, qthreshold=0.05)
pOutlierFinderChiSqNoCorr(allGeneData, .014,10, qthreshold=0.05)
pOutlierFinderChiSqNoCorr(allGeneData, .014,10, qthreshold=0.1)
summary(allGeneData)
allHGDPOF$FSTbar
pOutlierFinderChiSqNoCorr(allGeneData, .15,10, qthreshold=0.1)
temp=pOutlierFinderChiSqNoCorr(allGeneData, .15,10, qthreshold=0.05)
summary(temp$results)
summary(temp)
temp=pOutlierFinderChiSqNoCorr(allGeneData, .15,10, qthreshold=0.5)
summary(temp)
temp$results[which(temp$results$OutlierFLag)]
temp$results[which(temp$results$OutlierFlag)]
temp$results[which(temp$results$OutlierFlag),]
temp$results$OutlierFlag[1]
temp[which(temp$OutlierFlag)]
temp[which(temp$OutlierFlag),]
temp$SNPname[which(temp$OutlierFlag),]
temp$LocusName[which(temp$OutlierFlag),]
temp$LocusName[which(temp$OutlierFlag)]
chrDFMaker = function(chr,DeleteNonGenic = TRUE){
data=read.table(paste("~/Desktop/HGDP data/chr",chr,".popfreqs.ancfrq.strat",sep=""),sep="\t",header=FALSE)
names(data)=c("chrNum","SNPname","pop","bp1","bp2","freq","allele2count","totalAlleles")
writeLines("Data has been read")
varlist=tapply(data$freq,data$SNPname,var)
meanfreqlist=tapply(data$freq,data$SNPname,mean)
Helist= 2*meanfreqlist*(1-meanfreqlist)
LocusNametemp1=names(table(data$SNPname))
LocusNametemp=as.data.frame(LocusNametemp1)
names(LocusNametemp)=c("LocusName")
LocusNametemp2=as.character(LocusNametemp1)
FSTNoCorrlist=varlist/(meanfreqlist*(1-meanfreqlist))
T1NoCorrlist=varlist
T2NoCorrlist=(meanfreqlist*(1-meanfreqlist))
matchesToAnnotation=match(LocusNametemp2,annotationBySNPDF$SNPname)
SNPtype=annotationBySNPDF$SNPtype[matchesToAnnotation]
out=cbind(LocusName=LocusNametemp,He=Helist,FSTNoCorr=FSTNoCorrlist,T1NoCorr=T1NoCorrlist,T2NoCorr=T2NoCorrlist,FST=FSTNoCorrlist,T1=T1NoCorrlist,T2=T2NoCorrlist,SNPtype=SNPtype)
outHeScreened=out[which(out$He>0.1),]
if(DeleteNonGenic) out=out[which(SNPtype!=""),]
out
}
allGeneData=chrDFMaker(1)
for(chrnum in 2:23) rbind(allGeneData,chrDFMaker(chrnum))
write.table(allGeneData, file ="~/Desktop/HGDP data/allGeneData.txt" )
allHGDPOF=OutFLANK(allGeneData,NumberOfSamples=20)
which(allGeneData$SNPname=="rs12340338")
which(allGeneData$SNPname=="rs7869415")
head(annotations)
grep("http://hgdp.uchicago.edu",annotations)
grep("rs7869415",annotations)
grep("rs10465699",annotations)
grep("10465699",annotations)
grep("30943",annotations)
grep("12562",annotations)
summary(allHGDPOF)
summary(allHGDPOF$results)
head(allHGDPOF$results)
grep("1000050",annotations)
grep("1000050",annotationsBySNPDF)
grep("1000050",annotationBySNPDF)
which(annotationBySNPDF$SNPname=="rs1000050")
which(annotationBySNPDF$SNPname=="rs7869415")
annotationBySNPDF[363220]
annotationBySNPDF[363220,]
which(allHDDPOF$SNPname=="rs7869415")
which(allHGDPOF$SNPname=="rs7869415")
which(allHGDPOF$SNPname=="rs1000050")
which(allHGDPOF$SNPname=="rs1000050")
which(allHGDPOF$results$SNPname=="rs1000050")
which(allHGDPOF$results$LocusName=="rs1000050")
which(allHGDPOF$results$LocusName=="rs7869415")
grep("7869415",annotations)
annotations = read.table("~/Desktop/HGDP data/annotated_illumina_snps_128_wfst.gff",sep="\t",header=FALSE)
grep("7869415",annotations)
annotations(363220)
annotations[363220]
head(annotations)
annotations[[363220]]
length(annotations)
annotations[[363220,]]
annotations[[,363220]]
annotations
head(annotations,40)
head(annotations,40)
test$results[which(test$results$OutlierFlag),]$LocusName
which(allHGDPOF$results$SNPname=="rs1000050")
grep("1000050",annotations)
grep("1000050",annotationsBySNP)
grep("1000050",annotationBySNP)
grep("7869415",annotationBySNP)
grep("7869415",allGeneData)
grep("1000050",allGeneData)
grep("1000050",as.character(allGeneData))
which(allGeneData$LocusName=="rs1000050")
allGeneData$LocusName[1]
which(allGeneData$LocusName=="rs7869415")
pOutlierFinderChiSqNoCorr=function(DataList, Fstbar, dfInferred, qthreshold=0.05){
#Finds outliers based on chi-squared distribution
#Takes given values of dfInferred and Fstbar, and returns a list of p-values and q-values for all loci based on chi-square.
#Assumes that the DataList input has a column called $FSTNoCorr and that empty columns exist for $qvalues and $OutlierFlag
#
#
#Divide DataList into 3 lists:  DataListGood has $FST>0; DataListNeg has cases where $FST <=0; and
#   DataListNA has cases where $FST is NA.
#DataListNeg is necessary to keep separate here because these cases do not have meaningful  results with the chi-square aprach;
#   however, they do carry information.
DataListGood=DataList[which(DataList$FSTNoCorr>0),]
DataListNonPosFst=DataList[which(DataList$FSTNoCorr<=0),]
DataListNA=DataList[which(is.na(DataList$FSTNoCorr)),]
pList=pTwoSidedFromChiSq(DataListGood$FSTNoCorr*(dfInferred)/Fstbar,dfInferred)
qtemp=qvalue(pList,fdr.level=qthreshold,pi0.method="bootstrap")
#Note:  Using the bootstrap method here seems OK, but if this causes problems remove the pi0.method="bootstrap" in the previous line to revert to the default.
DataListGood$pvalues=pList
DataListGood$qvalues=qtemp$qvalues
DataListGood$OutlierFlag=qtemp$significant
rbind(DataListGood,DataListNonPosFst,DataListNA)
}
allHGDPOF=OutFLANK(allGeneData,NumberOfSamples=20)
summary(allHGDPOF$results)
outputDFStarterNoCorr=function(FstDataFrame,Hmin=0.1) {
#This will take a given dataframe with $LocusName, $FST,$He, $T1,  $T2, etc. and
#    initialize $indexOrder,$GoodH,$OutlierFlag (to 0), and $q (to 1).
#Hmin is the smallest allowable He for which a locus should be included in
#the initial calculations. By default this requires that a locus have
#heterozygosity equal to 10% or more.
len=length(FstDataFrame$FSTNoCorr)
indexOrder=seq(1,len)
GoodH=ifelse(FstDataFrame$He<Hmin,"lowH","goodH")
OutlierFlag=ifelse(is.na(FstDataFrame$FSTNoCorr),NA,FALSE)
qvalues=rep(NA,len)
pvalues=rep(NA,len)
cbind(FstDataFrame, indexOrder, GoodH, qvalues,OutlierFlag )
}
allHGDPOF=OutFLANK(allGeneData,NumberOfSamples=20)
summary(allHGDPOF$results)
source('~/Desktop/OutFLANK/R/OutFLANK.R', echo=TRUE)
allHGDPOF=OutFLANK(allGeneData,NumberOfSamples=20)
document("~/Desktop/OutFLANK")
install_github("whitlock/OutFLANK")
library(OutFLANK)
?OutFLANK
allHGDPOF=OutFLANK(allGeneData,NumberOfSamples=20)
fstBarCalculatorNoCorr=function(DataList){
#Calculates mean FstNoCorr from the dataframe, using sum(T1NoCorr) / sum(T2NoCorr) as the estimate of mean Fst.
#Uses only data for which qvalues > qthreshold (i.e. $OutlierFlag==FALSE)
#Does not internally screen for low MAF or low He values (but that can be added by only sending the
#  high MAF rows to this function)
sum(DataList$T1NoCorr[which(!DataList$OutlierFlag)])/sum(DataList$T2NoCorr[which(!DataList$OutlierFlag)])
}
allHGDPOF=OutFLANK(allGeneData,NumberOfSamples=20)
library(OtFLANK)
library(OutFLANK)
source('~/Desktop/OutFLANK/R/Fst Distribution plotter.R', echo=TRUE)
source('~/Desktop/OutFLANK/R/FST functions.R', echo=TRUE)
allHGDPOF=OutFLANK(allGeneData,NumberOfSamples=20)
source('~/Desktop/OutFLANK/R/Likelihood functions for OutFLANK.R', echo=TRUE)
allHGDPOF=OutFLANK(allGeneData,NumberOfSamples=20)
summary(allHGDPOF$results)
hist(allHGDPOF$results$pvalues)
